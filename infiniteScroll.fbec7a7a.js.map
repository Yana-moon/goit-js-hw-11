{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAUA,IAAIC,EAAO,EAEPC,EAAc,GACdC,EAAY,EACZC,EAAW,GAEfC,eAAeC,IACf,MAAMC,QAAiBC,EAAAC,QAAMC,IACzB,qEAAiCR,uCAA0DD,4CAI/F,OAFAE,EAAYI,EAASI,KAAKC,UA4J1BX,GAAQ,EA1JDM,EAASI,KAAKE,I,CAKrB,MAAMC,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAYH,SAASC,cAAc,WACnCG,EAAQJ,SAASC,cAAc,wBAMrC,SAASI,EAAaC,GACP,OAAXA,EAAEV,OACFO,EAAUI,UAAW,E,CAKzB,SAASC,EAAYF,GAE4C,IAA7DA,EAAEG,cAAcC,SAASC,YAAYC,MAAMC,OAAOC,SAClDX,EAAUI,UAAW,E,CAdzBR,EAAWgB,iBAAiB,UAmD5BzB,eAAwBgB,GACxBA,EAAEU,iBAEF,MAAMC,EAAOX,EAAEG,cACTG,EAAQK,EAAKP,SAASC,YAAYC,MAAMC,OAC9C1B,EAAcyB,EAEdJ,EAAYF,GACZD,EAAaC,GAyFbpB,EAAO,EA3CPgB,EAAQgB,UAAY,SA3CdC,IAAcC,SAAQ,IAAMH,EAAKI,UA3CvClB,EAAUI,UAAW,C,IAlBrBR,EAAWgB,iBAAiB,QAASP,GACrCJ,EAAMW,iBAAiB,QAASV,GAsBhC,MAAMiB,EAAUtB,SAASC,cAAc,YAqBvC,SAASsB,IACTD,EAAQE,UAAUC,OAAO,O,CAoBzBnC,eAAe6B,IACf,IACI,MAAMO,QAAenC,IACfoC,QAAeD,EAAOE,QAC5B,CAACC,EAAQC,IAwCb,UAAsBC,cACtBA,EAAaC,aACbA,EAAYC,KACZA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,IAEA,MAAO,cACIN,4CAECC,WAAsBC,0FAGdC,6DAGAC,gEAGGC,iEAGCC,mC,CAhEDC,CAAaR,GAASD,GACzC,IA4B2BA,EAzBLF,EA0B1BzB,EAAQqC,mBAAmB,YAAaV,GAoDxCxC,EAAW,IAAImD,EAAAxD,GAAJ,CAAmB,aAAc,CACxCyD,aAAc,MACdC,aAAc,MA/EdrD,EAASsD,UAELvD,EAlGO,IAkGiBF,EAAO,GAAM,IACzC,EAAA0D,EAAAlD,WAGkB,IAAdN,GACJoD,EAAAK,GAASC,OAAOC,QACZ,4EAEJxB,KACWnC,EAAY,GAAKF,EAAO,GAAM,GAwExB8D,EAvEL5D,EAwEhBoD,EAAAK,GAASC,OAAOG,QAAQ,oBAAoBD,aAvExCE,IACA3B,MAEA2B,IACA3B,I,CAEF,MAAO4B,GACL,OAAOC,QAAQC,MAAMF,E,CA+DzB,IAAqBH,EA3DUnB,C,CA+D/B,SAASqB,IACL9D,EAxLW,GAwLYF,EAAO,IAC9BqC,IACAiB,EAAAK,GAASC,OAAOG,QAChB,8D,CA5IJK,OAAOvC,iBAAiB,UAExB,WACA,MAAMwC,UAAEA,EAASC,aAAEA,EAAYC,aAAEA,GAAiBzD,SAAS0D,gBAE3DN,QAAQO,IAAI,C,UAAEJ,E,aAAWC,E,aAAcC,IAEnCA,EAAeF,GAAaC,GAQhClC,EAAQE,UAAUoC,IAAI,QACtBC,WAAW1C,EAAa,MAPbqC,EAAeD,IAAcE,GACpCP,G","sources":["src/infiniteScroll.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport scrollBy from './scrollBy.js';\n\n// ======================================\n\nconst API_KEY = '33912044-22b2651672bec86fc9e274e80';\nconst BASE_URL = 'https://pixabay.com/api';\nlet page = 1;\nlet per_page = 40;\nlet searchQuery = '';\nlet totalHits = 0;\nlet lightbox = '';\n\nasync function searchImage() {\nconst response = await axios.get(\n    `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&image_type=photo&per_page=${per_page}&page=${page}&orientation=horizontal&safesearch=true`\n);\ntotalHits = response.data.totalHits;\nnextPage();\nreturn response.data.hits;\n}\n\n// =========================================\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst submitBtn = document.querySelector('.submit');\nconst input = document.querySelector('#search-form > input');\n\nsearchForm.addEventListener('submit', onSearch);\nsearchForm.addEventListener('input', onSabmitBtn);\ninput.addEventListener('input', invalidInput);\n\nfunction invalidInput(e) {\nif (e.data === null) {\n    submitBtn.disabled = true;\n}\nreturn;\n}\n\nfunction onSabmitBtn(e) {\n  // console.log(e.currentTarget.elements.searchQuery.value);\nif (e.currentTarget.elements.searchQuery.value.trim().length !== 0) {\n    submitBtn.disabled = false;\n}\n}\n\nfunction ofSabmitBtn() {\nsubmitBtn.disabled = true;\n}\n\n// =========================================================\n\nconst loading = document.querySelector('.loading');\n\nwindow.addEventListener('scroll', infiniteScroll);\n\nfunction infiniteScroll() {\nconst { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n\nconsole.log({ scrollTop, scrollHeight, clientHeight });\n\nif (clientHeight + scrollTop >= scrollHeight) {\n    showLoading();\n} else if (scrollHeight - scrollTop === clientHeight) {\n    galleryEndInfo();\n}\n}\n\nfunction showLoading() {\nloading.classList.add('show');\nsetTimeout(fetchImages, 500);\n}\n\nfunction showRemove() {\nloading.classList.remove('show');\n}\n\n// =======================================================\n\nasync function onSearch(e) {\ne.preventDefault();\n\nconst form = e.currentTarget;\nconst value = form.elements.searchQuery.value.trim();\nsearchQuery = value;\n\nonSabmitBtn(e);\ninvalidInput(e);\nresetPage();\nclearGallery();\nawait fetchImages().finally(() => form.reset());\nofSabmitBtn();\n}\n\nasync function fetchImages() {\ntry {\n    const images = await searchImage();\n    const markup = await images.reduce(\n    (markup, image) => createMarkup(image) + markup,\n    ''\n    );\n\n    appendImagesToGallery(markup);\n    lightbox.refresh();\n\n    if (totalHits > per_page && page - 1 !== 1) {\n    scrollBy();\n    }\n\n    if (totalHits === 0) {\n    Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n    );\n    showRemove();\n    } else if (totalHits > 0 && page - 1 === 1) {\n    totalImages(totalHits);\n    galleryEndInfo();\n    showRemove();\n    } else {\n    galleryEndInfo();\n    showRemove();\n    }\n} catch (err) {\n    return console.error(err);\n}\n}\n\nfunction appendImagesToGallery(markup) {\ngallery.insertAdjacentHTML('beforeend', markup);\nlightBox();\n}\n\nfunction clearGallery() {\ngallery.innerHTML = '';\n}\n\n// ========================================================\n\nfunction createMarkup({\nlargeImageURL,\nwebformatURL,\ntags,\nlikes,\nviews,\ncomments,\ndownloads,\n}) {\nreturn `\n<a href=\"${largeImageURL}\">\n<div class=\"photo-card\">\n<img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n<div class=\"info\">\n    <p class=\"info-item\">\n    <b>Likes: </b>${likes}\n    </p>\n    <p class=\"info-item\">\n    <b>Views: </b>${views}\n    </p>\n    <p class=\"info-item\">\n    <b>Comments: </b>${comments}\n    </p>\n    <p class=\"info-item\">\n    <b>Downloads: </b>${downloads}\n    </p>\n</div>\n</div></a>\n`;\n}\n\n// ========================================================\n\nfunction nextPage() {\npage += 1;\n}\n\nfunction resetPage() {\npage = 1;\n}\n\nfunction lightBox() {\nlightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n});\n}\n\nfunction totalImages(totalHits) {\nNotiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n}\n\nfunction galleryEndInfo() {\nif (totalHits / per_page < page - 1) {\n    showRemove();\n    Notiflix.Notify.success(\n    \"We're sorry, but you've reached the end of search results.\"\n    );\n}\n}"],"names":["$fZKcF","parcelRequire","$ad3db829490fd486$var$page","$ad3db829490fd486$var$searchQuery","$ad3db829490fd486$var$totalHits","$ad3db829490fd486$var$lightbox","async","$ad3db829490fd486$var$searchImage","response","$2shzp","default","get","data","totalHits","hits","$ad3db829490fd486$var$searchForm","document","querySelector","$ad3db829490fd486$var$gallery","$ad3db829490fd486$var$submitBtn","$ad3db829490fd486$var$input","$ad3db829490fd486$var$invalidInput","e","disabled","$ad3db829490fd486$var$onSabmitBtn","currentTarget","elements","searchQuery","value","trim","length","addEventListener","preventDefault","form","innerHTML","$ad3db829490fd486$var$fetchImages","finally","reset","$ad3db829490fd486$var$loading","$ad3db829490fd486$var$showRemove","classList","remove","images","markup1","reduce","markup","image","largeImageURL","webformatURL","tags","likes","views","comments","downloads","$ad3db829490fd486$var$createMarkup","insertAdjacentHTML","$parcel$interopDefault","captionsData","captionDelay","refresh","$9enWy","$7Y9D8","Notify","failure","totalHits1","success","$ad3db829490fd486$var$galleryEndInfo","err","console","error","window","scrollTop","scrollHeight","clientHeight","documentElement","log","add","setTimeout"],"version":3,"file":"infiniteScroll.fbec7a7a.js.map"}